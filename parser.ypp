%{

#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include "monDessin.h"
#include <QtGui>
#include <QApplication>

#define YYERROR_VERBOSE
#define USE(VALUE) /*empty*/


extern "C" int yyparse (void);
extern "C" int yylex(void);
extern "C" void yyerror(const std::string&);
extern FILE* yyin;

QPointer<monDessin> D;
%}

%union{
    char * texte;
    int valeur;
}

%token ENTIER
%token<texte> CERCLE
%token<texte> RECTANGLE
%token<texte> LIGNE

%token<texte> COLOR
%token<texte> FILLING

%token EPAISSEUR
%token COULEUR
%token OPACITE
%token ROTATION
%token REMPLISSAGE
%token IDENTIFICATEUR
%token VIRGULE
%token DEGRE
%token POURCENT
%token PARENTHESE_OUVRANTE
%token PARENTHESE_FERMANTE
%token ACCOLADE_OUVRANTE
%token ACCOLADE_FERMANTE
%token CROCHET_OUVRANT
%token CROCHET_FERMANT
%token EGAL
%token FIN_LIGNE

%type<texte> Forme

%start Input
%%
Input: 
	FIN_LIGNE
	|FIN_LIGNE Input
	|syntaxe1 Input
	|syntaxe2 Input
	|syntaxe3 Input

syntaxe1: 
	Forme PARENTHESE_OUVRANTE ENTIER VIRGULE ENTIER VIRGULE ENTIER VIRGULE ENTIER PARENTHESE_FERMANTE ACCOLADE_OUVRANTE COLOR VIRGULE ENTIER VIRGULE FILLING VIRGULE ENTIER DEGRE VIRGULE ENTIER POURCENT ACCOLADE_FERMANTE
	{
		char * nom_forme = $1;
		std::cout << "Syntaxe1: $1 = " << nom_forme << std::endl;
		D->m_formes.push_back(nom_forme);
	}

syntaxe2: 
	Forme PARENTHESE_OUVRANTE ENTIER VIRGULE ENTIER VIRGULE ENTIER PARENTHESE_FERMANTE ACCOLADE_OUVRANTE FIN_LIGNE
	COULEUR EGAL COLOR FIN_LIGNE
	ROTATION EGAL ENTIER DEGRE FIN_LIGNE
	REMPLISSAGE EGAL FILLING FIN_LIGNE
	EPAISSEUR EGAL ENTIER FIN_LIGNE
	OPACITE EGAL ENTIER POURCENT FIN_LIGNE
	ACCOLADE_FERMANTE
	{
		char * nom_forme = $1;
		std::cout << "Syntaxe2: $1 = " << nom_forme << std::endl;
		D->m_formes.push_back(nom_forme);
	}

syntaxe3: 
	Forme IDENTIFICATEUR PARENTHESE_OUVRANTE ENTIER VIRGULE ENTIER VIRGULE ENTIER VIRGULE ENTIER PARENTHESE_FERMANTE FIN_LIGNE
	IDENTIFICATEUR CROCHET_OUVRANT EPAISSEUR CROCHET_FERMANT EGAL ENTIER FIN_LIGNE
	IDENTIFICATEUR CROCHET_OUVRANT COULEUR CROCHET_FERMANT EGAL COLOR		
	{
		char * nom_forme = $1;
		std::cout << "Syntaxe3: $1 = " << nom_forme << std::endl;
		D->m_formes.push_back(nom_forme);
	}

Forme:
	RECTANGLE
	|CERCLE
	|LIGNE


%%


void trace(QMainWindow * w){
	yyin = fopen("forme.txt", "r");
	D = new monDessin;	
	w->setCentralWidget(D);
    	w->setMinimumSize(800, 600);
	yyparse();
	D->draw();
	w->show();
	return	;
}



void yyerror(const std::string& mess){
    std::cout << mess << std::endl;
}